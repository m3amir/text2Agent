#!/bin/bash

# Setup S3 backend for Terraform state with S3 lock files
# Modern approach using use_lockfile instead of deprecated DynamoDB

BUCKET_NAME="text2agent-terraform-state-eu-west-2"
REGION="eu-west-2"
BACKEND_CONFIG_FILE="backend-override.tf"

echo "🚀 Setting up Terraform S3 backend with S3 lock files..."
echo "========================================================="
echo "S3 Bucket: $BUCKET_NAME"
echo "Region: $REGION"
echo "Lock Method: S3 lock files (.tflock)"
echo ""

# =====================================
# STEP 1: Setup S3 Bucket
# =====================================
echo "1️⃣ Setting up S3 bucket for state storage..."

# Check if bucket already exists
if ! aws s3api head-bucket --bucket "$BUCKET_NAME" --region "$REGION" 2>/dev/null; then
    echo "📦 Creating S3 bucket: $BUCKET_NAME"
    
    # Create the bucket
    aws s3api create-bucket \
        --bucket "$BUCKET_NAME" \
        --region "$REGION" \
        --create-bucket-configuration LocationConstraint="$REGION"
    
    if [ $? -eq 0 ]; then
        echo "✅ S3 bucket created successfully"
    else
        echo "❌ Failed to create S3 bucket"
        exit 1
    fi

    # Configure bucket
    echo "🔧 Configuring bucket settings..."
    aws s3api put-bucket-versioning \
        --bucket "$BUCKET_NAME" \
        --versioning-configuration Status=Enabled

    aws s3api put-bucket-encryption \
        --bucket "$BUCKET_NAME" \
        --server-side-encryption-configuration '{
                "Rules": [{
                    "ApplyServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                    }
                }]
        }'

    aws s3api put-public-access-block \
        --bucket "$BUCKET_NAME" \
        --public-access-block-configuration \
        BlockPublicAcls=true,IgnorePublicAcls=true,BlockPublicPolicy=true,RestrictPublicBuckets=true
        
    echo "✅ S3 bucket configured with versioning, encryption, and security"
else
    echo "✅ S3 bucket already exists: $BUCKET_NAME"
fi

# =====================================
# STEP 2: Verify S3 Permissions
# =====================================
echo ""
echo "2️⃣ Verifying S3 permissions for lock files..."

# Test permissions by trying to list the bucket
if aws s3 ls "s3://$BUCKET_NAME" --region "$REGION" >/dev/null 2>&1; then
    echo "✅ S3 list permission verified"
else
    echo "❌ S3 list permission failed"
    exit 1
fi

# Test write permission by creating a test file
TEST_KEY="test-lock-permissions.tmp"
echo '{"test": "lock permissions"}' | aws s3 cp - "s3://$BUCKET_NAME/$TEST_KEY" --region "$REGION" 2>/dev/null
if [ $? -eq 0 ]; then
    echo "✅ S3 write permission verified"
    # Clean up test file
    aws s3 rm "s3://$BUCKET_NAME/$TEST_KEY" --region "$REGION" >/dev/null 2>&1
else
    echo "❌ S3 write permission failed"
    exit 1
fi

# =====================================
# STEP 3: Configure Backend with S3 Locking
# =====================================
echo ""
echo "3️⃣ Configuring Terraform backend with S3 lock files..."

# Create backend override file with S3 locking enabled
cat > "$BACKEND_CONFIG_FILE" << EOF
# ==============================================================================
# BACKEND OVERRIDE - S3 State Locking
# This file automatically enables S3 lockfile-based locking
# Generated by automated workflow - DO NOT COMMIT TO VERSION CONTROL
# ==============================================================================

terraform {
  backend "s3" {
    bucket         = "$BUCKET_NAME"
    key            = "text2agent/production/terraform.tfstate"
    region         = "$REGION"
    use_lockfile   = true
    encrypt        = true
  }
}
EOF

echo "✅ Backend configuration updated with S3 lock files"

# =====================================
# SUMMARY
# =====================================
echo ""
echo "🎉 Modern Terraform Backend Setup Complete!"
echo "==========================================="
echo ""
echo "📋 Configuration Summary:"
echo "   ✅ S3 Bucket: $BUCKET_NAME"
echo "   ✅ Region: $REGION"
echo "   ✅ State Locking: S3 lock files (.tflock)"
echo "   ✅ Encryption: ENABLED"
echo "   ✅ Versioning: ENABLED"
echo "   💰 Cost: Only S3 storage (~\$0.10-0.30/month)"
echo ""
echo "🔐 S3 Locking Benefits:"
echo "   - ✅ Modern, supported locking method"
echo "   - ✅ No DynamoDB table needed"
echo "   - ✅ Simpler infrastructure"
echo "   - ✅ Lower cost"
echo "   - ✅ Automatic cleanup when operations complete"
echo ""
echo "📁 State Location:"
echo "   s3://$BUCKET_NAME/text2agent/production/terraform.tfstate"
echo ""
echo "🔒 Lock File Location:"
echo "   s3://$BUCKET_NAME/text2agent/production/terraform.tfstate.tflock"
echo ""
echo "🚀 Ready for Terraform operations with concurrent protection!" 